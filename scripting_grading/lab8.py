key = dict(
    q1a = dict(entrytype='var', pts=5, auto=True, answers=[(" \w\w\w ", 5), ("\s\w\w\w\s", 5), ("\s...\s", 3), (" ... ", 3)],
              question="Write a regular expression to match all three-character words surrounded by spaces."),
    q1b = dict(entrytype='var', pts=5, auto=True, answers=[("\W\w\w\w\W", 5), (" .\w\w\w. ", 3), ("\W...\W", 3)],
              question="match all three-character words."),
    q1c = dict(entrytype='var', pts=5, auto=True, answers=[("[Tt]he", 5), (".he", 5)],
              question="Match `the` or `The`."),
    q1d = dict(entrytype='var', pts=5, auto=True, answers=[".....\.", ".{5}\.", "\. [A-Z]\w+"],
              question="Find the context at the end of a sentence: the five characters leading up to the period."),
    q2a = dict(entrytype='var', pts=6, auto=True, answers=['\.\s\w+', '\. \w+', '\.\s\w*', '\. \w*'],
              question="Write the expression that creates the following matches: ['. The', '. Although']"),
    q2b = dict(entrytype='var', pts=6, auto=True, answers=[' a \w+ \w+', 'a \w+ \w+', 'a\s\w+\s\w+', 'a \w* \w*'],
              question="Write the expression to match the two words following the word a. The results should be ['a deadly earthquake', 'a young bear', 'a new home']"),
    q2c = dict(entrytype='var', pts=6, auto=True, answers=[('\w+\'s', 6),
                                                           ("\w+\\'s ", 6),
                                                           ("\w*'s", 5)],
              question="Match all words with an 's."),
    q2d = dict(entrytype='var', pts=6, auto=True, answers=[('\(.*\)', 5), 
                                                           ('\(.*?\)', 6),
                                                           ("\(.+?\)", 6),
                                                           ("\(\w+\s\w+\)", 5),
                                                           ("\(\w+ \w+\)", 5)],
              question="Write the expression to match all values in parentheses."),
    q2e = dict(entrytype='var', pts=6, auto=True, answers=["[A-Z][\w\']+", "[A-Z][\w']*"],
              question="Write the expression to match all capitalized words, including Paddington's"),
    q2f = dict(entrytype='var', pts=6, auto=True, answers=['[A-Z]\w+\s[A-Z]\w+', '[A-Z]\w* [A-Z]\w*', '[A-Z]\w*\'?\w?',
                                                           "[A-Z]\w+ [A-Z]\w+"],
              question="Write the expression to match all pairings of capitalized words, like Mary Brown"),
    q3a = dict(entrytype='var', pts=4, auto=True, answers=['Harry Potter', '(Harry Potter)'],
              question="Write the pattern to find all the tweets that mention 'Harry Potter'"),
    q3b = dict(entrytype='var', pts=6, auto=True, answers=[('#', 5.5), ('#\w', 6), ('#\w+', 6), ('\#\w+', 6), ("\#\w*", 5.5)],
              question="Write the pattern to return the tweets that have a hashtag (assuming only word characters in hashtags)"),
    q3c = dict(entrytype='var', pts=8, auto=True, answers=[('#\w+ .*#\w+', 8), ("#\w+.*#\w+", 8), ('#.+#.+',7),
                                                           ("\#\w*.+\#\w*", 7), ('\#\w+.+\#\w+', 8)],
              question="Write the Pattern to return the tweets that have at least two hashtags"),
    q3d = dict(entrytype='var', pts=6, auto=True, answers=['2\d\d\d', '20\d\d'],
              question="Write the pattern to return the tweets that mention a year in the current millenium"),
    q4a = dict(entrytype='cell', pts=5, auto=False,
              question="Return the 20 tweets with the most favourites."),
    q4b = dict(entrytype='var', pts=5, auto=True, answers=[("54510", 5),
                                                           ("218028",3), #just first 100 tweets of dataset
                                                           ("2402126", 2.5), # sum everything
                                                           ],
              question="How many total favourites do this account's first 100 tweets ever have?"),
    q4c = dict(entrytype='var', pts=10, auto=True, answers=[
        ('399034885446176768', 10),
        ('191307654910574594', 7), # lowest faves, rather than lowest ratio
        ('121734532562030592', 9) # nearly correct, from from the wrong end of the list (highest ratio, not lowest)
        ],
              question="What is the id of the tweet matching the following criteria: has the lowest retweet-to-favourites ratio, among tweets without hashtags and with more than 1000 favourites."),
)